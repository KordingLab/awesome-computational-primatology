name: PR Preview

on:
  pull_request:
    branches: [ main ]
    paths: [ 'README.md' ]

jobs:
  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pandas

      - name: Generate preview website
        run: python .github/workflows/website.py

      - name: Upload preview as artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-preview
          path: index.html
          retention-days: 7

      - name: Deploy preview (if Pages enabled)
        uses: peaceiris/actions-gh-pages@v4
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          destination_dir: pr-${{ github.event.number }}
          keep_files: false

      - name: Comment PR with preview link
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;
            const previewUrl = `https://${repoOwner}.github.io/${repoName}/pr-${prNumber}/`;
            
            const comment = `## üîç Website Preview
            
            Your changes have been processed! 
            
            **üìÑ Preview Artifact:** Check the "website-preview" artifact above to download the generated HTML file.
            
            ${previewUrl ? `**üåê Live Preview:** ${previewUrl}` : '**‚ÑπÔ∏è  Live preview:** GitHub Pages not configured for this repository.'}
            
            ---
            
            ### üõ†Ô∏è How to test locally:
            \`\`\`bash
            # Clone and test your changes
            git checkout ${{ github.head_ref }}
            python .github/workflows/website.py
            python -m http.server 8000
            # Visit: http://localhost:8000
            \`\`\`
            
            ### ‚úÖ Validation Status:
            - ‚úÖ Website generated successfully
            - ‚úÖ Table format validated
            - ‚úÖ Ready for review
            `;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: repoOwner,
              repo: repoName,
              body: comment
            });